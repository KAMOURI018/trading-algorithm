name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: self-hosted  # Or windows-latest if you're using a Windows runner

    steps:
      # Step 1: Temporarily set PowerShell execution policy
      - name: Set PowerShell Execution Policy
        shell: cmd
        run: |
          powershell.exe -Command "Set-ExecutionPolicy -ExecutionPolicy Bypass -Scope Process -Force"

      # Step 2: Check out the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 3: Log in to Docker Hub
      - name: Log in to Docker Hub
        run: |
          powershell.exe -Command "docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}"

      # Step 4: Build and push Docker images
      - name: Build and push Docker images
        shell: cmd  # Using cmd to directly run powershell.exe commands
        run: |
          # Replace `your_dockerhub_username` with your actual Docker Hub username
          powershell.exe -Command "docker build -t your_dockerhub_username/data-ingestion:latest -f data-ingestion/Dockerfile data-ingestion/"
          powershell.exe -Command "docker push your_dockerhub_username/data-ingestion:latest"
          
          powershell.exe -Command "docker build -t your_dockerhub_username/strategy:latest -f strategy/Dockerfile strategy/"
          powershell.exe -Command "docker push your_dockerhub_username/strategy:latest"
          
          powershell.exe -Command "docker build -t your_dockerhub_username/risk-management:latest -f risk-management/Dockerfile risk-management/"
          powershell.exe -Command "docker push your_dockerhub_username/risk-management:latest"
          
          powershell.exe -Command "docker build -t your_dockerhub_username/visualization:latest -f visualization/Dockerfile visualization/"
          powershell.exe -Command "docker push your_dockerhub_username/visualization:latest"

      # Optional Step 5: Set up kubeconfig if deploying to Kubernetes
      - name: Set up kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG_B64 }}" | base64 -d > ~/.kube/config
        shell: bash

      # Optional Step 6: Deploy to Kubernetes
      - name: Deploy to Kubernetes
        env:
          KUBECONFIG: ~/.kube/config
        run: |
          kubectl apply -f k8s-deployment.yaml
